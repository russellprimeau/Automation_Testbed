name: Run Python Script with Cache
run-name: ${{ github.actor }} is running the Python update script

on: [push]
  # schedule:
  #   - cron: "3 * * * *"

jobs:
  Update-csv:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache Python packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'  # Replace '3.x' with the desired Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Replace with your requirements file

      - name: Run Python script
        run: python update_data.py
        
      - name: Finished
        run: echo "This job's status is ${{ job.status }}."

# Previous Example:
# name: Update CSV

# on:
#   schedule:
#     - cron: '0 * * * *'  # Schedule to run every hour UTC

# jobs:
#   update-csv:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Update CSV
#         run: 
#           python update_data.py
#           # Add your script/command here to update the CSV file
#           # For example, you might use a script to generate new CSV data
#           # echo "Date,Value" > data.csv
#           # echo "$(date +%Y-%m-%d),100" >> data.csv

#       - name: Commit and push changes
#         uses: EndBug/add-and-commit@v7
#         with:
#           author_name: Russell Primeau
#           author_email: russell.primeau@gmail.com
#           message: Updated CSV file
#           add: 'data.csv'
#           token: ${{ secrets.AUTO_TOKEN1 }}

